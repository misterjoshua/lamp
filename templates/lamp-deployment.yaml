apiVersion: apps/v1
kind: Deployment
metadata:
  name: lamp
spec:
  selector:
    matchLabels:
      app: lamp
  replicas: {{ .Values.lamp.replicas }}
  template:
    metadata:
      labels:
        app: lamp
    spec:
      schedulerName: {{ .Values.scheduler }}
      serviceAccount: lamp
{{- if .Values.imageCredentials }}
      imagePullSecrets:
        - name: lamp-image-pull-secrets
{{- end }}
      containers:
        - name: lamp
          image: {{ .Values.lamp.image }}
          imagePullPolicy: Always
          command:
            - bash
            - /lamp-scripts/lamp-startup-script.sh
          ports:
            - containerPort: 80
          resources:
{{- if .Values.lamp.resources }}
{{ .Values.lamp.resources | toYaml | indent 12 }}
{{- end }}
          env:
{{ if .Values.database.enabled }}
            - name: LAMP_DB_HOST
              value: mysql
            - name: LAMP_DB_NAME
              value: lamp
            - name: LAMP_DB_USERNAME
              valueFrom:
                secretKeyRef: { name: mysql-secret, key: user-name }
            - name: LAMP_DB_PASSWORD
              valueFrom:
                secretKeyRef: { name: mysql-secret, key: user-password }
{{ end }}
{{- if .Values.lamp.ingressUrl }}
            - name: LAMP_INGRESS_URL
              value: {{ .Values.lamp.ingressUrl }}
{{- else if .Values.ingress.hosts }}
            - name: LAMP_INGRESS_URL
{{- if .Values.ingress.tls.enabled }}
              value: https://{{ index .Values.ingress.hosts 0 }}
{{- else }}
              value: http://{{ index .Values.ingress.hosts 0 }}
{{- end }}
{{- end }}
          volumeMounts:
            - mountPath: /var/www/html
              name: lamp-data
            - mountPath: /lamp-scripts
              name: lamp-scripts
      volumes:
        - name: lamp-data
          persistentVolumeClaim: { claimName: lamp-data }
        - name: lamp-scripts
          configMap: { name: lamp-scripts }
